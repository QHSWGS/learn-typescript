(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{394:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue常用性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue常用性能优化"}},[t._v("#")]),t._v(" Vue常用性能优化")]),t._v(" "),a("p",[a("code",[t._v("Vue")]),t._v("常用的一些优化方式，主要是在构建项目过程需要注意的方面。")]),t._v(" "),a("h2",{attrs:{id:"编码优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码优化"}},[t._v("#")]),t._v(" 编码优化")]),t._v(" "),a("h3",{attrs:{id:"避免响应所有数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免响应所有数据"}},[t._v("#")]),t._v(" 避免响应所有数据")]),t._v(" "),a("p",[t._v("不要将所有的数据都放到"),a("code",[t._v("data")]),t._v("中，"),a("code",[t._v("data")]),t._v("中的数据都会增加"),a("code",[t._v("getter")]),t._v("和"),a("code",[t._v("setter")]),t._v("，并且会收集"),a("code",[t._v("watcher")]),t._v("，这样还占内存，不需要响应式的数据我们可以直接定义在实例上。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("beforeCreate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"函数式组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式组件"}},[t._v("#")]),t._v(" 函数式组件")]),t._v(" "),a("p",[t._v("函数组是一个不包含状态和实例的组件，简单的说，就是组件不支持响应式，并且不能通过"),a("code",[t._v("this")]),t._v("关键字引用自己。因为函数式组件没有状态，所以它们不需要像"),a("code",[t._v("Vue")]),t._v("的响应式系统一样需要经过额外的初始化，这样就可以避免相关操作带来的性能消耗。当然函数式组件仍然会对相应的变化做出响应式改变，比如新传入新的"),a("code",[t._v("props")]),t._v("，但是在组件本身中，它无法知道数据何时发生了更改，因为它不维护自己的状态。很多场景非常适合使用函数式组件：")]),t._v(" "),a("ul",[a("li",[t._v("一个简单的展示组件，也就是所谓的"),a("code",[t._v("dumb")]),t._v("组件。例如"),a("code",[t._v("buttons")]),t._v("、"),a("code",[t._v("pills")]),t._v("、"),a("code",[t._v("tags")]),t._v("、"),a("code",[t._v("cards")]),t._v("等，甚至整个页面都是静态文本，比如"),a("code",[t._v("About")]),t._v("页面。")]),t._v(" "),a("li",[t._v("高阶组件，即用于接收一个组件作为参数，返回一个被包装过的组件。")]),t._v(" "),a("li",[a("code",[t._v("v-for")]),t._v("循环中的每项通常都是很好的候选项。")])]),t._v(" "),a("h3",{attrs:{id:"区分computed和watch使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区分computed和watch使用场景"}},[t._v("#")]),t._v(" 区分computed和watch使用场景")]),t._v(" "),a("p",[a("code",[t._v("computed")]),t._v("是计算属性，依赖其它属性值，并且"),a("code",[t._v("computed")]),t._v("的值有缓存，只有它依赖的属性值发生改变，下一次获取"),a("code",[t._v("computed")]),t._v("的值时才会重新计算"),a("code",[t._v("computed")]),t._v("的值。"),a("br"),t._v(" "),a("code",[t._v("watch")]),t._v("更多的是观察的作用，类似于某些数据的监听回调，每当监听的数据变化时都会执行回调进行后续操作。"),a("br"),t._v("\n当我们需要进行数值计算，并且依赖于其它数据时，应该使用"),a("code",[t._v("computed")]),t._v("，因为可以利用"),a("code",[t._v("computed")]),t._v("的缓存特性，避免每次获取值时，都要重新计算。当我们需要在数据变化时执行异步或开销较大的操作时，应该使用"),a("code",[t._v("watch")]),t._v("，使用"),a("code",[t._v("watch")]),t._v("选项允许我们执行异步操作，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。")]),t._v(" "),a("h3",{attrs:{id:"v-for添加key且避免同时使用v-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for添加key且避免同时使用v-if"}},[t._v("#")]),t._v(" v-for添加key且避免同时使用v-if")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("v-for")]),t._v("遍历必须为"),a("code",[t._v("item")]),t._v("添加"),a("code",[t._v("key")]),t._v("，且尽量不要使用"),a("code",[t._v("index")]),t._v("而要使用唯一"),a("code",[t._v("id")]),t._v("去标识"),a("code",[t._v("item")]),t._v("，在列表数据进行遍历渲染时，设置唯一"),a("code",[t._v("key")]),t._v("值方便"),a("code",[t._v("Vue.js")]),t._v("内部机制精准找到该条列表数据，当"),a("code",[t._v("state")]),t._v("更新时，新的状态值和旧的状态值对比，较快地定位到"),a("code",[t._v("diff")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("v-for")]),t._v("遍历避免同时使用"),a("code",[t._v("v-if")]),t._v("，"),a("code",[t._v("v-for")]),t._v("比"),a("code",[t._v("v-if")]),t._v("优先级高，如果每一次都需要遍历整个数组，将会影响速度。")])]),t._v(" "),a("h3",{attrs:{id:"区分v-if与v-show使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区分v-if与v-show使用场景"}},[t._v("#")]),t._v(" 区分v-if与v-show使用场景")]),t._v(" "),a("ul",[a("li",[t._v("实现方式: "),a("code",[t._v("v-if")]),t._v("是动态的向"),a("code",[t._v("DOM")]),t._v("树内添加或者删除"),a("code",[t._v("DOM")]),t._v("元素，"),a("code",[t._v("v-show")]),t._v("是通过设置"),a("code",[t._v("DOM")]),t._v("元素的"),a("code",[t._v("display")]),t._v("样式属性控制显隐。")]),t._v(" "),a("li",[t._v("编译过程: "),a("code",[t._v("v-if")]),t._v("切换有一个局部编译卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件，"),a("code",[t._v("v-show")]),t._v("只是简单的基于"),a("code",[t._v("CSS")]),t._v("切换。")]),t._v(" "),a("li",[t._v("编译条件: "),a("code",[t._v("v-if")]),t._v("是惰性的，如果初始条件为假，则什么也不做，只有在条件第一次变为真时才开始局部编译， "),a("code",[t._v("v-show")]),t._v("是在任何条件下都被编译，然后被缓存，而且"),a("code",[t._v("DOM")]),t._v("元素保留。")]),t._v(" "),a("li",[t._v("性能消耗: "),a("code",[t._v("v-if")]),t._v("有更高的切换消耗，"),a("code",[t._v("v-show")]),t._v("有更高的初始渲染消耗。")]),t._v(" "),a("li",[t._v("使用场景: "),a("code",[t._v("v-if")]),t._v("适合条件不太可能改变的情况，"),a("code",[t._v("v-show")]),t._v("适合条件频繁切换的情况。")])]),t._v(" "),a("h3",{attrs:{id:"长列表性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长列表性能优化"}},[t._v("#")]),t._v(" 长列表性能优化")]),t._v(" "),a("p",[a("code",[t._v("Vue")]),t._v("会通过"),a("code",[t._v("Object.defineProperty")]),t._v("对数据进行劫持，来实现视图响应数据的变化，然而有些时候我们的组件就是纯粹的数据展示，不会有任何改变，我们就不需要"),a("code",[t._v("Vue")]),t._v("来劫持我们的数据，在大量数据展示的情况下，这能够很明显的减少组件初始化的时间，可以通过"),a("code",[t._v("Object.freeze")]),t._v("方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了。对于需要修改的长列表的优化大列表两个核心，一个分段一个区分，具体执行分为：仅渲染视窗可见的数据、进行函数节流、 减少驻留的"),a("code",[t._v("VNode")]),t._v("和"),a("code",[t._v("Vue")]),t._v("组件，不使用显示的子组件"),a("code",[t._v("slot")]),t._v("方式，改为手动创建虚拟"),a("code",[t._v("DOM")]),t._v("来切断对象引用。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("users")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" users "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/users"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("users "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"路由懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载"}},[t._v("#")]),t._v(" 路由懒加载")]),t._v(" "),a("p",[a("code",[t._v("Vue")]),t._v("是单页面应用，可能会有很多的路由引入，这样使用"),a("code",[t._v("webpcak")]),t._v("打包后的文件很大，当进入首页时，加载的资源过多，页面会出现白屏的情况，不利于用户体验。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应的组件，这样就更加高效。对于"),a("code",[t._v("Vue")]),t._v("路由懒加载的方式有"),a("code",[t._v("Vue")]),t._v("异步组件、动态"),a("code",[t._v("import")]),t._v("、"),a("code",[t._v("webpack")]),t._v("提供的"),a("code",[t._v("require.ensure")]),t._v("，最常用的就是动态"),a("code",[t._v("import")]),t._v("的方式。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打包后，每个组件单独生成一个chunk文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@/views/example.vue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"服务端渲染ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染ssr"}},[t._v("#")]),t._v(" 服务端渲染SSR")]),t._v(" "),a("p",[t._v("如果需要优化首屏加载速度并且首屏加载速度是至关重要的点，那么就需要服务端渲染"),a("code",[t._v("SSR")]),t._v("，服务端渲染"),a("code",[t._v("SSR")]),t._v("其实是优缺点并行的，需要合理决定是否真的需要服务端渲染。")]),t._v(" "),a("h4",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ul",[a("li",[t._v("更好的"),a("code",[t._v("SEO")]),t._v("，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面，如果"),a("code",[t._v("SEO")]),t._v("对站点至关重要，而页面又是异步获取内容，则可能需要服务器端渲染"),a("code",[t._v("SSR")]),t._v("解决此问题。")]),t._v(" "),a("li",[t._v("更快的内容到达时间"),a("code",[t._v("time-to-content")]),t._v("，特别是对于缓慢的网络情况或运行缓慢的设备，无需等待所有的"),a("code",[t._v("JavaScript")]),t._v("都完成下载并执行，用户将会更快速地看到完整渲染的页面，通常可以产生更好的用户体验，并且对于那些内容到达时间"),a("code",[t._v("time-to-content")]),t._v("与转化率直接相关的应用程序而言，服务器端渲染"),a("code",[t._v("SSR")]),t._v("至关重要。")])]),t._v(" "),a("h4",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ul",[a("li",[t._v("开发条件所限，浏览器特定的代码，只能在某些生命周期钩子函数"),a("code",[t._v("lifecycle hook")]),t._v("中使用，一些外部扩展库"),a("code",[t._v("external library")]),t._v("可能需要特殊处理，才能在服务器渲染应用程序中运行。")]),t._v(" "),a("li",[t._v("涉及构建设置和部署的更多要求，与可以部署在任何静态文件服务器上的完全静态单页面应用程序"),a("code",[t._v("SPA")]),t._v("不同，服务器渲染应用程序，通常需要处于"),a("code",[t._v("Node.js server")]),t._v("运行环境。")]),t._v(" "),a("li",[t._v("更大的服务器端负载，在"),a("code",[t._v("Node.js")]),t._v("中渲染完整的应用程序，显然会比仅仅提供静态文件的"),a("code",[t._v("server")]),t._v("更加大量占用"),a("code",[t._v("CPU")]),t._v("资源"),a("code",[t._v("CPU-intensive")]),t._v("-"),a("code",[t._v("CPU")]),t._v("密集型，因此如果预料在高流量环境"),a("code",[t._v("high traffic")]),t._v("下使用，需要准备相应的服务器负载，并明智地采用缓存策略。")])]),t._v(" "),a("h3",{attrs:{id:"使用keep-alive组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用keep-alive组件"}},[t._v("#")]),t._v(" 使用keep-alive组件")]),t._v(" "),a("p",[t._v("当在组件之间切换的时候，有时会想保持这些组件的状态，以避免反复重渲染导致的性能等问题，使用"),a("code",[t._v("<keep-alive>")]),t._v("包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。重新创建动态组件的行为通常是非常有用的，但是在有些情况下我们更希望那些标签的组件实例能够被在它们第一次被创建的时候缓存下来，此时使用"),a("code",[t._v("<keep-alive>")]),t._v("包裹组件即可缓存当前组件实例，将组件缓存到内存，用于保留组件状态或避免重新渲染，和"),a("code",[t._v("<transition>")]),t._v("相似它，其自身不会渲染一个"),a("code",[t._v("DOM")]),t._v("元素，也不会出现在组件的父组件链中。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("keep-alive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("is")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("currentComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("keep-alive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化"}},[t._v("#")]),t._v(" 打包优化")]),t._v(" "),a("h3",{attrs:{id:"模板预编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板预编译"}},[t._v("#")]),t._v(" 模板预编译")]),t._v(" "),a("p",[t._v("当使用"),a("code",[t._v("DOM")]),t._v("内模板或"),a("code",[t._v("JavaScript")]),t._v("内的字符串模板时，模板会在运行时被编译为渲染函数，通常情况下这个过程已经足够快了，但对性能敏感的应用还是最好避免这种用法。预编译模板最简单的方式就是使用单文件组件——相关的构建设置会自动把预编译处理好，所以构建好的代码已经包含了编译出来的渲染函数而不是原始的模板字符串。如果使用"),a("code",[t._v("webpack")]),t._v("，并且喜欢分离"),a("code",[t._v("JavaScript")]),t._v("和模板文件，可以使用"),a("code",[t._v("vue-template-loader")]),t._v("，其可以在构建过程中把模板文件转换成为"),a("code",[t._v("JavaScript")]),t._v("渲染函数。")]),t._v(" "),a("h3",{attrs:{id:"sourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sourcemap"}},[t._v("#")]),t._v(" SourceMap")]),t._v(" "),a("p",[t._v("在项目进行打包后，会将开发中的多个文件代码打包到一个文件中，并且经过压缩、去掉多余的空格、"),a("code",[t._v("babel")]),t._v("编译化后，最终将编译得到的代码会用于线上环境，那么这样处理后的代码和源代码会有很大的差别，当有"),a("code",[t._v("bug")]),t._v("的时候，我们只能定位到压缩处理后的代码位置，无法定位到开发环境中的代码，对于开发来说不好调式定位问题，因此"),a("code",[t._v("sourceMap")]),t._v("出现了，它就是为了解决不好调式代码问题的，在线上环境则需要关闭"),a("code",[t._v("sourceMap")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"配置splitchunksplugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置splitchunksplugins"}},[t._v("#")]),t._v(" 配置splitChunksPlugins")]),t._v(" "),a("p",[a("code",[t._v("Webpack")]),t._v("内置了专门用于提取多个"),a("code",[t._v("Chunk")]),t._v("中的公共部分的插件"),a("code",[t._v("CommonsChunkPlugin")]),t._v("，是用于提取公共代码的工具，"),a("code",[t._v("CommonsChunkPlugin")]),t._v("于"),a("code",[t._v("4.0")]),t._v("及以后被移除，使用"),a("code",[t._v("SplitChunksPlugin")]),t._v("替代。")]),t._v(" "),a("h3",{attrs:{id:"使用treeshaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用treeshaking"}},[t._v("#")]),t._v(" 使用treeShaking")]),t._v(" "),a("p",[a("code",[t._v("tree shaking")]),t._v("是一个术语，通常用于描述移除"),a("code",[t._v("JavaScript")]),t._v("上下文中的未引用代码"),a("code",[t._v("dead-code")]),t._v("，其依赖于"),a("code",[t._v("ES2015")]),t._v("模块系统中的静态结构特性，例如"),a("code",[t._v("import")]),t._v("和"),a("code",[t._v("export")]),t._v("，这个术语和概念实际上是兴起于"),a("code",[t._v("ES2015")]),t._v("模块打包工具"),a("code",[t._v("rollup")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"第三方插件的按需引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方插件的按需引入"}},[t._v("#")]),t._v(" 第三方插件的按需引入")]),t._v(" "),a("p",[t._v("我们在项目中经常会需要引入第三方插件，如果我们直接引入整个插件，会导致项目的体积太大，我们可以借助"),a("code",[t._v("babel-plugin-component")]),t._v("，然后可以只引入需要的组件，以达到减小项目体积的目的，以项目中引入"),a("code",[t._v("element-ui")]),t._v("组件库为例。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "presets": [["es2015", { "modules": false }]],\n  "plugins": [\n    [\n      "component",\n      {\n        "libraryName": "element-ui",\n        "styleLibraryName": "theme-chalk"\n      }\n    ]\n  ]\n}\n\n')])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Select "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'element-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"每日一题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[t._v("#")]),t._v(" 每日一题")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/WindrunnerMax/EveryDay\n")])])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://zhuanlan.zhihu.com/p/121000054\nhttps://www.jianshu.com/p/f372d0e3de80\nhttps://juejin.im/post/6844903887787278349\nhttps://juejin.im/post/6844904189999448071\nhttps://www.lagou.com/lgeduarticle/22278.html\nhttps://www.cnblogs.com/mmzuo-798/p/11778044.html\nhttps://blog.csdn.net/gtlbtnq9mr3/article/details/104889927\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);