(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{364:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react中的纯组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react中的纯组件"}},[t._v("#")]),t._v(" React中的纯组件")]),t._v(" "),a("p",[a("code",[t._v("React")]),t._v("提供了一种基于浅比较模式来确定是否应该重新渲染组件的类"),a("code",[t._v("React.PureComponent")]),t._v("，通常只需要继承"),a("code",[t._v("React.PureComponent")]),t._v("就可以定义一个纯组件。"),a("code",[t._v("React.PureComponent")]),t._v("与"),a("code",[t._v("React.Component")]),t._v("很相似，两者的区别在于"),a("code",[t._v("React.Component")]),t._v("并未实现"),a("code",[t._v("shouldComponentUpdate()")]),t._v("，而"),a("code",[t._v("React.PureComponent")]),t._v("中以浅层对比"),a("code",[t._v("prop")]),t._v("和"),a("code",[t._v("state")]),t._v("的方式来实现了该函数。如果赋予"),a("code",[t._v("React")]),t._v("组件相同的"),a("code",[t._v("props")]),t._v("和"),a("code",[t._v("state")]),t._v("，"),a("code",[t._v("render()")]),t._v("函数会渲染相同的内容，那么在某些情况下使用"),a("code",[t._v("React.PureComponent")]),t._v("可提高性能。")]),t._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("首先我们来回顾下"),a("code",[t._v("React")]),t._v("组件执行重渲染"),a("code",[t._v("re-render")]),t._v("更新的时机，一般当一个组件的"),a("code",[t._v("props")]),t._v("属性或者"),a("code",[t._v("state")]),t._v("状态发生改变的时候，也就是父组件传递进来的"),a("code",[t._v("props")]),t._v("发生变化或者使用"),a("code",[t._v("this.setState")]),t._v("函数时，组件会进行重新渲染"),a("code",[t._v("re-render")]),t._v("。而在接受到新的"),a("code",[t._v("props")]),t._v("或者"),a("code",[t._v("state")]),t._v("到组件更新之间会执行其生命周期中的一个函数"),a("code",[t._v("shouldComponentUpdate")]),t._v("，当该函数返回"),a("code",[t._v("true")]),t._v("时才会进行重渲染，如果返回"),a("code",[t._v("false")]),t._v("则不会进行重渲染，在这里"),a("code",[t._v("shouldComponentUpdate")]),t._v("默认返回"),a("code",[t._v("true")]),t._v("，因此当组件遇到性能瓶颈的时候可以在"),a("code",[t._v("shouldComponentUpdate")]),t._v("中进行逻辑判断，来自定义组件是否需要重渲染。"),a("br"),t._v("\n我们可以稍微查看一下源码的实现，可以看到"),a("code",[t._v("PureComponent")]),t._v("是通过寄生组合继承的方式继承了"),a("code",[t._v("Component")]),t._v("，"),a("code",[t._v("commit id")]),t._v("为"),a("code",[t._v("0cf22a5")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// master/packages/react/src/ReactBaseClasses.js line 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ComponentDummy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ComponentDummy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Convenience component with default shallow equality check for sCU.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PureComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updater")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a component has string refs, we will assign a different object later.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emptyObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updater "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updater "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" ReactNoopUpdateQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pureComponentPrototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PureComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ComponentDummy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npureComponentPrototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PureComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid an extra prototype jump for these methods.")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pureComponentPrototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npureComponentPrototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPureReactComponent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("同时在"),a("code",[t._v("checkShouldComponentUpdate")]),t._v("函数中有一段这样的逻辑，在函数名上就能看出是对传入的参数进行了一次浅比较，因此实际上"),a("code",[t._v("PureReactComponent")]),t._v("组件和"),a("code",[t._v("ReactComponent")]),t._v("组件的区别就是"),a("code",[t._v("React.PureComponent")]),t._v("中以浅层对比"),a("code",[t._v("prop")]),t._v("和"),a("code",[t._v("state")]),t._v("的方式来实现了"),a("code",[t._v("shouldComponentUpdate()")]),t._v("函数。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// master/packages/react-reconciler/src/ReactFiberClassComponent.new.js line 334")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ctor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isPureReactComponent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n")])])]),a("p",[t._v("需要注意的是，"),a("code",[t._v("React.PureComponent")]),t._v("中的"),a("code",[t._v("shouldComponentUpdate()")]),t._v("仅作对象的浅层比较。如果对象中包含复杂的数据结构，则有可能因为无法检查深层的差别，产生错误的比对结果。仅在你的"),a("code",[t._v("props")]),t._v("和"),a("code",[t._v("state")]),t._v("较为简单时才使用"),a("code",[t._v("React.PureComponent")]),t._v("，或者每次更新都使用新的对象，或者在深层数据结构发生变化时调用"),a("code",[t._v("forceUpdate()")]),t._v("来确保组件被正确地更新，你也可以考虑使用"),a("code",[t._v("immutable")]),t._v("对象加速嵌套数据的比较。此外"),a("code",[t._v("React.PureComponent")]),t._v("中的"),a("code",[t._v("shouldComponentUpdate()")]),t._v("将跳过所有子组件树的"),a("code",[t._v("prop")]),t._v("更新，因此需要确保所有子组件也都是纯的组件。")]),t._v(" "),a("h3",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ul",[a("li",[t._v("在"),a("code",[t._v("shouldComponentUpdate")]),t._v("生命周期做了优化会自动"),a("code",[t._v("shadow diff")]),t._v("组件的"),a("code",[t._v("state")]),t._v("和"),a("code",[t._v("props")]),t._v("，结合"),a("code",[t._v("immutable")]),t._v("数据就可以很好地去做更新判断。")]),t._v(" "),a("li",[t._v("隔离了父组件与子组件的状态变化。")])]),t._v(" "),a("h3",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("shouldComponentUpdate")]),t._v("中的"),a("code",[t._v("shadow diff")]),t._v("同样消耗性能。")]),t._v(" "),a("li",[t._v("需要确保组件渲染仅取决于"),a("code",[t._v("props")]),t._v("与"),a("code",[t._v("state")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"每日一题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[t._v("#")]),t._v(" 每日一题")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/WindrunnerMax/EveryDay\n")])])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://zhuanlan.zhihu.com/p/30659051\nhttps://juejin.cn/post/6844903618848669709\nhttps://juejin.cn/post/6844904099679305741\nhttps://segmentfault.com/a/1190000014979065\nhttps://ginnko.github.io/2018/12/17/pure-component/\nhttps://zh-hans.reactjs.org/docs/react-api.html#reactpurecomponent\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);