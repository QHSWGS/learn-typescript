(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{363:function(e,t,n){"use strict";n.r(t);var v=n(14),_=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"react中refs的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react中refs的理解"}},[e._v("#")]),e._v(" React中refs的理解")]),e._v(" "),t("p",[t("code",[e._v("Refs")]),e._v("提供了一种方式，允许我们访问"),t("code",[e._v("DOM")]),e._v("节点或在"),t("code",[e._v("render")]),e._v("方法中创建的"),t("code",[e._v("React")]),e._v("元素。")]),e._v(" "),t("h2",{attrs:{id:"描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),t("p",[e._v("在典型的"),t("code",[e._v("React")]),e._v("数据流中，"),t("code",[e._v("props")]),e._v("是父组件与子组件交互的唯一方式，要修改一个子组件，你需要使用新的"),t("code",[e._v("props")]),e._v("来重新渲染它，但是在某些情况下，你需要在典型数据流之外强制修改子组件，被修改的子组件可能是一个"),t("code",[e._v("React")]),e._v("组件的实例，也可能是一个"),t("code",[e._v("DOM")]),e._v("元素，对于这两种情况"),t("code",[e._v("React")]),e._v("都提供了解决办法。"),t("br"),e._v("\n避免使用"),t("code",[e._v("refs")]),e._v("来做任何可以通过声明式实现来完成的事情，通常在可以使用"),t("code",[e._v("props")]),e._v("与"),t("code",[e._v("state")]),e._v("的情况下勿依赖"),t("code",[e._v("refs")]),e._v("，下面是几个适合使用"),t("code",[e._v("refs")]),e._v("的情况:")]),e._v(" "),t("ul",[t("li",[e._v("管理焦点、文本选择或媒体播放。")]),e._v(" "),t("li",[e._v("触发强制动画。")]),e._v(" "),t("li",[e._v("集成第三方"),t("code",[e._v("DOM")]),e._v("库。")])]),e._v(" "),t("h2",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[e._v("#")]),e._v(" 使用")]),e._v(" "),t("p",[t("code",[e._v("React")]),e._v("提供的这个"),t("code",[e._v("ref")]),e._v("属性，表示为对组件真正实例的引用，其实就是"),t("code",[e._v("ReactDOM.render()")]),e._v("返回的组件实例，需要区分一下渲染组件与渲染原生"),t("code",[e._v("DOM")]),e._v("元素，渲染组件时返回的是组件实例，而渲染"),t("code",[e._v("DOM")]),e._v("元素时，返回是具体的"),t("code",[e._v("DOM")]),e._v("节点，"),t("code",[e._v("React")]),e._v("的"),t("code",[e._v("ref")]),e._v("有"),t("code",[e._v("3")]),e._v("种用法。")]),e._v(" "),t("h3",{attrs:{id:"字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[e._v("#")]),e._v(" 字符串")]),e._v(" "),t("p",[t("code",[e._v("ref")]),e._v("可以直接设置为字符串值，这种方式基本不推荐使用，或者在未来的"),t("code",[e._v("React")]),e._v("版本中不会再支持该方式。这主要是因为使用字符串导致的一些问题，例如当"),t("code",[e._v("ref")]),e._v("定义为"),t("code",[e._v("string")]),e._v("时，需要"),t("code",[e._v("React")]),e._v("追踪当前正在渲染的组件，在"),t("code",[e._v("reconciliation")]),e._v("阶段，"),t("code",[e._v("React Element")]),e._v("创建和更新的过程中，"),t("code",[e._v("ref")]),e._v("会被封装为一个闭包函数，等待"),t("code",[e._v("commit")]),e._v("阶段被执行，这会对"),t("code",[e._v("React")]),e._v("的性能产生一些影响等。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('class InputOne extends React.Component {\n    componentDidMount() {\n        this.refs.inputRef.value = 1;\n      }\n    render() {\n        return <input ref="inputRef" />;\n    }\n}\n')])])]),t("h3",{attrs:{id:"回调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回调"}},[e._v("#")]),e._v(" 回调")]),e._v(" "),t("p",[t("code",[e._v("React")]),e._v("支持给任意组件添加特殊属性，"),t("code",[e._v("ref")]),e._v("属性接受一个回调函数，其在组件被加载或卸载时会立即执行。")]),e._v(" "),t("ul",[t("li",[e._v("当给"),t("code",[e._v("HTML")]),e._v("元素添加"),t("code",[e._v("ref")]),e._v("属性时，"),t("code",[e._v("ref")]),e._v("回调接收了底层的"),t("code",[e._v("DOM")]),e._v("元素作为参数。")]),e._v(" "),t("li",[e._v("当给组件添加"),t("code",[e._v("ref")]),e._v("属性时，"),t("code",[e._v("ref")]),e._v("回调接收当前组件实例作为参数。")]),e._v(" "),t("li",[e._v("当组件卸载的时候，会传入"),t("code",[e._v("null")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("ref")]),e._v("回调会在"),t("code",[e._v("componentDidMount")]),e._v("或"),t("code",[e._v("componentDidUpdate")]),e._v("等生命周期回调之前执行。")])]),e._v(" "),t("p",[t("code",[e._v("Callback Ref")]),e._v("我们通常会使用内联函数的形式，那么每次渲染都会重新创建，由于"),t("code",[e._v("React")]),e._v("会清理旧的"),t("code",[e._v("ref")]),e._v("然后设置新的，因此更新期间会调用两次，第一次为"),t("code",[e._v("null")]),e._v("，如果在"),t("code",[e._v("Callback")]),e._v("中带有业务逻辑的话，可能会出错，可以通过将"),t("code",[e._v("Callback")]),e._v("定义成类成员函数并进行绑定的方式避免。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class InputTwo extends React.Component {\n    componentDidMount() {\n        this.inputRef.value = 2;\n      }\n    render() {\n        return <input ref={(element) =>this.inputRef = element} />;\n    }\n}\n")])])]),t("h3",{attrs:{id:"api创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api创建"}},[e._v("#")]),e._v(" API创建")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("React v16.3")]),e._v("中经"),t("code",[e._v("0017-new-create-ref")]),e._v("提案引入了新的"),t("code",[e._v("React.createRef")]),e._v("的"),t("code",[e._v("API")]),e._v("，当"),t("code",[e._v("ref")]),e._v("被传递给"),t("code",[e._v("render")]),e._v("中的元素时，对该节点的引用可以在"),t("code",[e._v("ref")]),e._v("的"),t("code",[e._v("current")]),e._v("属性中被访问，"),t("code",[e._v("ref")]),e._v("的值根据节点的类型而有所不同：")]),e._v(" "),t("ul",[t("li",[e._v("当"),t("code",[e._v("ref")]),e._v("属性用于"),t("code",[e._v("HTML")]),e._v("元素时，构造函数中使用"),t("code",[e._v("React.createRef()")]),e._v("创建的"),t("code",[e._v("ref")]),e._v("接收底层"),t("code",[e._v("DOM")]),e._v("元素作为其"),t("code",[e._v("current")]),e._v("属性。")]),e._v(" "),t("li",[e._v("当"),t("code",[e._v("ref")]),e._v("属性用于自定义"),t("code",[e._v("class")]),e._v("组件时，"),t("code",[e._v("ref")]),e._v("对象接收组件的挂载实例作为其"),t("code",[e._v("current")]),e._v("属性。")]),e._v(" "),t("li",[e._v("不能在函数组件上使用"),t("code",[e._v("ref")]),e._v("属性，因为他们没有实例。")])]),e._v(" "),t("p",[e._v("对比新的"),t("code",[e._v("CreateRef")]),e._v("与"),t("code",[e._v("Callback Ref")]),e._v("，并没有压倒性的优势，只是希望成为一个便捷的特性，在性能上会会有微小的优势，"),t("code",[e._v("Callback Ref")]),e._v("采用了组件"),t("code",[e._v("Render")]),e._v("过程中在闭包函数中分配"),t("code",[e._v("ref")]),e._v("的模式，而"),t("code",[e._v("CreateRef")]),e._v("则采用了"),t("code",[e._v("Object Ref")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class InputThree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n    componentDidMount() {\n        this.inputRef.current.value = 3;\n    }\n    render() {\n        return <input ref={this.inputRef} />;\n    }\n}\n")])])]),t("h2",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset="UTF-8" />\n    <title>React</title>\n</head>\n\n<body>\n    <div id="root"></div>\n</body>\n<script src="https://unpkg.com/react@17/umd/react.development.js"><\/script>\n<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"><\/script>\n<script src="https://unpkg.com/@babel/standalone/babel.min.js"><\/script>\n<script type="text/babel">\n    class InputOne extends React.Component {\n        componentDidMount() {\n            this.refs.inputRef.value = 1;\n          }\n        render() {\n            return <input ref="inputRef" />;\n        }\n    }\n\n    class InputTwo extends React.Component {\n        componentDidMount() {\n            this.inputRef.value = 2;\n          }\n        render() {\n            return <input ref={(element) =>this.inputRef = element} />;\n        }\n    }\n\n    class InputThree extends React.Component {\n        constructor(props) {\n            super(props);\n            this.inputRef = React.createRef();\n        }\n        componentDidMount() {\n            this.inputRef.current.value = 3;\n        }\n        render() {\n            return <input ref={this.inputRef} />;\n        }\n    }\n    \n\n    var vm = ReactDOM.render(\n        <>\n            <InputOne />\n            <InputTwo />\n            <InputThree />\n        </>,\n        document.getElementById("root")\n    );\n<\/script>\n\n</html>\n\n')])])]),t("h2",{attrs:{id:"每日一题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])])]),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://zhuanlan.zhihu.com/p/40462264\nhttps://www.jianshu.com/p/4e2357ea1ba1\nhttps://juejin.cn/post/6844903809274085389\nhttps://juejin.cn/post/6844904048882106375\nhttps://segmentfault.com/a/1190000008665915\nhttps://zh-hans.reactjs.org/docs/refs-and-the-dom.html\n")])])])])}),[],!1,null,null,null);t.default=_.exports}}]);